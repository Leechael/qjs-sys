[package]
name = "qjs-extensions"
version = "0.1.0"
edition = "2021"


[dependencies]
js = { package = "qjsbind", version = "0.1.0", default-features = false, path = "../qjsbind" }
qjsc = { package = "qjsc", version = "0.1.0", default-features = false, path = "../qjsc" }
base64 = { version = "0.21", optional = true, default-features = false, features = ["alloc"] }
sha1 = { version = "0.10", optional = true, default-features = false }
sha2 = { version = "0.10", optional = true, default-features = false }
sha3 = { version = "0.10", optional = true, default-features = false }
blake2 = { version = "0.10", optional = true, default-features = false }
hex = { version = "0.4", optional = true, default-features = false, features = ["alloc"] }
hex_fmt = { version = "0.3", optional = true, default-features = false }
parity-scale-codec = { version = "3.0", optional = true, default-features = false, features = ["derive"] }
chumsky = { version = "1.0.0-alpha.6", optional = true, default-features = false }
tinyvec_string = { version = "0.3.2", default-features = false, features = ["alloc"], optional = true }

# for crypto
aes = { version = "0.8.4", optional = true }
aes-gcm = { version = "0.10.3", optional = true }
p256 = { version = "0.13", optional = true, features = ["ecdh"] }
p384 = { version = "0.13", optional = true, features = ["ecdh"] }
p521 = { version = "0.13", optional = true, features = ["ecdh"] }
rand = { version = "0.8", optional = true }
uuid = { version = "1", optional = true, features = ["v4"] }
anyhow = { version = "1.0.86", default-features = false }
cbc = { version = "0.1.2", optional = true, features = ["alloc"] }
cipher = { version = "0.4.4", optional = true }
ctr = { version = "0.9.2", optional = true }

[features]
default = ["base64", "sha1", "sha2", "sha3", "blake2", "hex", "scale", "scale2", "crypto"]
hex = ["dep:hex", "hex_fmt"]
std = [
    "js/std",
    "base64/std",
    "parity-scale-codec/std",
    "anyhow/std",
    "aes-gcm?/std",
    "p256?/std",
    "p384?/std",
    "p521?/std",
    "rand?/std",
    "uuid?/std",
]
scale = [
    "parity-scale-codec",
    "chumsky",
    "tinyvec_string",
]
scale2 = [
    "parity-scale-codec",
    "chumsky",
    "tinyvec_string",
]

crypto = [
    "aes",
    "aes-gcm",
    "p256",
    "p384",
    "p521",
    "rand",
    "uuid",
    "cbc",
    "ctr",
    "cipher",
]
